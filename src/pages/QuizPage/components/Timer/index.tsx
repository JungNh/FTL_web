import * as React from 'react'
import { clearInterval as clearI, setInterval as setI } from 'worker-timers';
import './styles.scss'

type Props = {
  ended: number;
  onTimeOut: Function;
}

const format = (sec: number) => {
  let timeStr = "";
  let hours: number = +Math.floor(sec / 3600);
  let minutes: number = +Math.floor((sec - (hours * 3600)) / 60);
  let seconds: number = sec - (hours * 3600) - (minutes * 60);

  if (hours != 0) {
    timeStr = hours+":";
  }
  minutes = (minutes < 10 && timeStr !== "") ? 0 +minutes : minutes;
  timeStr += minutes+":";
  timeStr += (seconds < 10) ? "0"+seconds : String(seconds);
  return timeStr;
}

const Timer: React.FC<Props> = ({ ended, onTimeOut }) => {
  console.log('ended',ended)
  const [tick, setTick] = React.useState(ended);

  React.useEffect(() => {
    if (!ended) return;
    setTick(ended);
    const interval = setI(() => {
      setTick(tick => {
        if (tick - 1 <= 0) {
          clearI(interval)
          onTimeOut()
        }
        return Math.max(tick - 1, 0)
      })
    }, 1000);
    return () => {clearI(interval)}
  }, [ended]);

  return (
    <div className="timer__component">
      <svg width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path clipRule="evenodd" d="M14.144 0.854162C12.9872 -0.261976 11.1439 -0.300683 9.80986 0.892868C9.96646 0.950639 10.1231 1.00783 10.2802 1.0656C11.1233 1.43187 11.888 1.93159 12.5556 2.56708C13.2026 3.22162 13.7125 3.97207 14.0863 4.79935C14.1052 4.87677 14.144 4.95302 14.1646 5.03101C15.3008 3.70228 15.2626 1.95066 14.144 0.854162ZM12.6139 15H11.0844L10.4374 13.8839L11.4971 13.0375L12.6139 15ZM2.19949 15H3.72898L4.37657 13.8839L3.31805 13.0375L2.19949 15ZM11.0055 4.1448C10.0648 3.22104 8.82846 2.72017 7.49501 2.72017C6.18158 2.72017 4.94586 3.22104 4.00391 4.1448C3.06196 5.0495 2.55272 6.28118 2.55272 7.57063C2.55272 8.86008 3.06196 10.0923 4.00391 10.9965C4.94527 11.9202 6.18099 12.4211 7.49501 12.4211C8.82846 12.4211 10.0648 11.9202 11.0055 10.9965C11.9275 10.0923 12.4573 8.86008 12.4573 7.57063C12.4573 6.28118 11.9275 5.05008 11.0055 4.1448ZM8.20089 6.60874H8.18087V6.58968L6.49478 5.01137C6.43591 4.9536 6.37704 4.93454 6.31817 4.93454C6.25929 4.93454 6.18099 4.97267 6.14155 5.01137L5.96435 5.18526C5.92549 5.24303 5.90547 5.30023 5.90547 5.358C5.90547 5.41577 5.9249 5.47354 5.98377 5.53131L7.53269 6.99408L7.61099 9.53543C7.61099 9.67004 7.72932 9.76594 7.8665 9.76594H8.10198H8.12082C8.23915 9.74687 8.33688 9.65039 8.33688 9.51579L8.25858 6.78264C8.25976 6.70522 8.24092 6.64745 8.20089 6.60874ZM4.7298 1.0656C4.8864 1.00783 5.043 0.950639 5.20019 0.892868C3.84731 -0.300683 2.00344 -0.281619 0.865451 0.854162C-0.251938 1.95066 -0.31081 3.70228 0.826006 5.03044C0.865451 4.95302 0.904895 4.87619 0.924323 4.79877C1.27814 3.97149 1.8074 3.22104 2.4544 2.5665C3.12201 1.93159 3.86615 1.43187 4.7298 1.0656ZM14.0263 7.53308C14.0263 3.99113 11.1045 1.12395 7.49501 1.12395C3.90559 1.12395 0.983783 3.99171 0.983783 7.53308C0.983783 11.1322 3.90559 13.9226 7.49501 13.9226C11.0644 13.9226 14.0263 11.0739 14.0263 7.53308ZM10.7907 11.9786C10.5752 12.1132 10.3585 12.2674 10.1231 12.3824C9.33888 12.7862 8.45639 13.0369 7.49501 13.0369C6.55365 13.0369 5.65174 12.7862 4.88699 12.3824C4.65209 12.2668 4.41601 12.1126 4.21997 11.9786C2.84708 10.978 1.94516 9.38002 1.94516 7.57063C1.94516 4.56827 4.43603 2.12339 7.4956 2.12339C10.5758 2.12339 13.0661 4.56827 13.0661 7.57063C13.0655 9.38002 12.1636 10.978 10.7907 11.9786Z" fill="#0066FF" />
      </svg>
      Thời gian còn lại: {format(tick)}
    </div>
  )
}

export default React.memo(Timer)
